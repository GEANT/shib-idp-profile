# Administrative flow properties ->

# Set a logging ID to use when auditing this profile.
#userProfile.logging = UserProfile

# Set an explicit access control policy name to apply.
#userProfile.accessPolicy =

# Set whether a fresh user presence proof should be required for this request.
#userProfile.forceAuthn = false

# Set the authentication flows to use as comma limited list.
# userProfile.authenticationFlows

# Set the default authentication methods to use, expressed as custom principals as comma limited list.
#userProfile.defaultAuthenticationMethods =

# Set the ordered collection of post-authentication interceptor flows to enable as comma limited list.
#userProfile.postAuthenticationFlows =

# Set whether attributes should be resolved for access control policy.
#userProfile.resolveAttributes = false


# UserProfile properties ->

# Attributes that are presented to user as Personal Dataas comma limited list.
userProfile.idpuserattributes = eduPersonPrincipalName, eduPersonAffiliation, displayName, cn, sn, givenName, eduPersonEntitlement, eduPersonAssurance, mail

# If you define a logout url like /idp/profile/Logout, Logout link is then displayed on profile pages. By default no logout is shown.
#userProfile.logoutUrl =

# Bean to determine whether to collect data for connected services page.
#userProfile.connectedServices.collect = shibboleth.Conditions.FALSE

# Boolean to determine whether to show data on connected services page.
#userProfile.connectedServices.show = false

# Bean to determine whether to collect oidc/oauth2 related tokens of user.
#userProfile.tokens.collect = shibboleth.Conditions.FALSE

# Bean to determine whether to collect data for activity page.
#userProfile.activityPage.collect = shibboleth.Conditions.FALSE

# Boolean to determine whether to show activity page.
#userProfile.activityPage.show = false

# Maximum number of entries per user on activity page.
#userProfile.activityPage.maxEntries = 50

# Boolean to determine whether to show all services page.
#userProfile.allServices.show = false

# Bean to determine whether to collect and show attribute values (i.e. not only attribute names) on connected services and activity pages.
#userProfile.attributeValues.collect = shibboleth.Conditions.FALSE

# Storage Service for collected data.
#userProfile.StorageService = shibboleth.StorageService

# Expiration duration for dormant user record.
#userProfile.recordexExpiration = P180D

# Bean to look up username per the collected data is stored and read by.
#userProfile.UsernameLookupStrategy = userProfile.UsernameLookupStrategy

# Bean to look up relying party id to use when storing collected data.
#userProfile.RelyingPartyIdLookupStrategy = userProfile.RelyingPartyIdLookupStrategy
