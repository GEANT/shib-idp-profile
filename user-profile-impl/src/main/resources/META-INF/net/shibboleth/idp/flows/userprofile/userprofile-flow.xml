<?xml version="1.0" encoding="UTF-8"?>
<!-- See LICENSE.txt file in the root directory of this repository for the 
    copyright/license information. -->
<flow xmlns="http://www.springframework.org/schema/webflow"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
    parent="admin.abstract">

    <action-state id="InitializeProfileRequestContext">
        <evaluate expression="InitializeProfileRequestContext" />
        <evaluate expression="FlowStartPopulateAuditContext" />
        <evaluate expression="'proceed'" />
        
        <!-- Branch to determine if authentication is required. -->
        <transition on="proceed" to="DoAdminPreamble" />
    </action-state>

    <action-state id="DoProfileWork">
        <evaluate expression="InitializeUserProfileContext" />
        <evaluate expression="ResolveUPAttributes" />
        <evaluate expression="RenderIdPAttributes" />
        <evaluate expression="RenderUserProfileCacheItems" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="UserProfileViewPersonalData" />
    </action-state>

    <view-state id="UserProfileViewPersonalData" view="userprofile-pd">
        <on-entry>
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="T(net.shibboleth.shared.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayNameFunction" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.geant.shibboleth.plugin.userprofile.context.UserProfileContext))" result="viewScope.userProfileContext" />
            <evaluate expression="showConnectedServices" result="viewScope.showConnectedServices" />
            <evaluate expression="showActivityPage" result="viewScope.showActivityPage" />
            <evaluate expression="showAllServices" result="viewScope.showAllServices" />
            <evaluate expression="logoutUrl" result="viewScope.logoutUrl" />
        </on-entry>
        <transition on="personalData" to="UserProfileViewPersonalData" />
        <transition on="connectedOrganizations" to="UserProfileViewConnectedOrganizations" />
        <transition on="activityPage" to="UserProfileViewActivityPage" />
        <transition on="allOrganizations" to="UserProfileViewAllOrganizations" />
    </view-state>
    
    <view-state id="UserProfileViewConnectedOrganizations" view="userprofile-co">
        <on-entry>
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="T(net.shibboleth.shared.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="T(org.geant.shibboleth.plugin.userprofile.utils.DateUtil)" result="viewScope.dateUtil" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayNameFunction" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.geant.shibboleth.plugin.userprofile.context.UserProfileContext))" result="viewScope.userProfileContext" />
            <evaluate expression="showActivityPage" result="viewScope.showActivityPage" />
            <evaluate expression="showAllServices" result="viewScope.showAllServices" />
            <evaluate expression="logoutUrl" result="viewScope.logoutUrl" />
        </on-entry>
        <transition on="personalData" to="UserProfileViewPersonalData" />
        <transition on="connectedOrganizations" to="UserProfileViewConnectedOrganizations" />
        <transition on="activityPage" to="UserProfileViewActivityPage" />
        <transition on="allOrganizations" to="UserProfileViewAllOrganizations" />
        <transition on="revokeToken" to="ExtractAndRevokeTokenFromRequest" />
    </view-state>
    
    <view-state id="UserProfileViewActivityPage" view="userprofile-ap">
        <on-entry>
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="T(net.shibboleth.shared.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="T(org.geant.shibboleth.plugin.userprofile.utils.DateUtil)" result="viewScope.dateUtil" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayNameFunction" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.geant.shibboleth.plugin.userprofile.context.UserProfileContext))" result="viewScope.userProfileContext" />
            <evaluate expression="showConnectedServices" result="viewScope.showConnectedServices" />
            <evaluate expression="showAllServices" result="viewScope.showAllServices" />
            <evaluate expression="logoutUrl" result="viewScope.logoutUrl" />
        </on-entry>
        <transition on="personalData" to="UserProfileViewPersonalData" />
        <transition on="connectedOrganizations" to="UserProfileViewConnectedOrganizations" />
        <transition on="activityPage" to="UserProfileViewActivityPage" />
        <transition on="allOrganizations" to="UserProfileViewAllOrganizations" />
    </view-state>
    
    <view-state id="UserProfileViewAllOrganizations" view="userprofile-ao">
        <on-entry>
            <evaluate expression="RenderUserProfileContext" />
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="T(net.shibboleth.shared.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayNameFunction" />
            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages, flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.AttributeRegistryService'))"
                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.geant.shibboleth.plugin.userprofile.context.UserProfileContext))" result="viewScope.userProfileContext" />
            <evaluate expression="showConnectedServices" result="viewScope.showConnectedServices" />
            <evaluate expression="showActivityPage" result="viewScope.showActivityPage" />
            <evaluate expression="logoutUrl" result="viewScope.logoutUrl" />
        </on-entry>
        <transition on="personalData" to="UserProfileViewPersonalData" />
        <transition on="connectedOrganizations" to="UserProfileViewConnectedOrganizations" />
        <transition on="activityPage" to="UserProfileViewActivityPage" />
        <transition on="allOrganizations" to="UserProfileViewAllOrganizations" />
        <transition on="showAttributes" to="ResolveRPAttributes" />
    </view-state>

    <action-state id="ResolveRPAttributes">
        <evaluate expression="ExtractRelyingPartyIdFromRequest" />
        <evaluate expression="ResolveUPAttributes" />
        <evaluate expression="FilterRPAttributes" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="UserProfileViewAllOrganizations" />
    </action-state>
    
    <action-state id="ExtractAndRevokeTokenFromRequest">
        <evaluate expression="ExtractAndRevokeTokenFromRequest" />
        <evaluate expression="RenderUserProfileCacheItems" />
        <evaluate expression="'proceed'" />
        <transition on="RevocationFailed" to="UserProfileViewConnectedOrganizations" />
        <transition on="proceed" to="UserProfileViewConnectedOrganizations" />
    </action-state>

    <bean-import resource="userprofile-beans.xml" />

</flow>

